{"version":3,"file":"static/js/597.17dac65c.chunk.js","mappings":"yNAuCA,UAnCa,SAAAA,GACX,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAEMC,GADWC,EAAAA,EAAAA,MACQC,MAAMF,QAQ/B,OAPAG,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACqBC,EAAAA,EAAAA,IAAYJ,GADjC,OACQK,EADR,OAEEN,EAAYM,EAAKA,MAFnB,4CADc,uBAAC,WAAD,wBAKdC,EACD,GAAE,CAACN,KAEF,8BACE,0BACE,wBACGF,EAASS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACZ,2BACE,gBACEC,IACEH,EAAY,0CAC2BA,GACnC,sCAENI,IAAI,MAEN,uBAAIH,KACJ,uCAAeC,OAVRH,EADG,SAkBvB,C,8LCpCKM,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBC,EAAAA,GAAAA,IAAA,mCAAsCF,IAF1D,cAEGG,EAFH,yBAGIA,EAASC,MAHb,uCAKHC,QAAQC,IAAR,MALG,wGAUA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAA2Bb,GAA3B,gGAEoBQ,EAAAA,GAAAA,IAAA,gBAAmBR,EAAnB,oBAAiCM,IAFrD,cAEGG,EAFH,yBAGIA,EAASC,MAHb,uCAKHC,QAAQC,IAAR,MALG,wGAUA,SAAehB,EAAtB,+CAAO,OAAP,oBAAO,WAA2BI,GAA3B,gGAEoBQ,EAAAA,GAAAA,IAAA,gBAAmBR,EAAnB,4BAAyCM,IAF7D,cAEGG,EAFH,yBAGIA,EAASC,MAHb,uCAKHC,QAAQC,IAAR,MALG,wGAUA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA6Bd,GAA7B,gGAEoBQ,EAAAA,GAAAA,IAAA,gBAAmBR,EAAnB,4BAAyCM,IAF7D,cAEGG,EAFH,yBAGIA,EAASC,MAHb,uCAKHC,QAAQC,IAAR,MALG,wGAUA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,gGAEoBR,EAAAA,GAAAA,IAAA,+BACGF,EADH,kBACoBU,IAHxC,cAEGP,EAFH,yBAKIA,EAASC,MALb,uCAOHC,QAAQC,IAAR,MAPG,wGAzCPJ,EAAAA,GAAAA,SAAAA,QAAyB,+B","sources":["components/Cast.jsx","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getFilmCast } from 'services/api';\n\nconst Cast = props => {\n  const [castList, setcastList] = useState([]);\n  const location = useLocation();\n  const movieId = location.state.movieId;\n  useEffect(() => {\n    async function getFilmCastInfo() {\n      const cast = await getFilmCast(movieId);\n      setcastList(cast.cast);\n    }\n    getFilmCastInfo();\n  }, [movieId]);\n  return (\n    <section>\n      <div>\n        <ul>\n          {castList.map(({ id, profile_path, name, character }) => (\n            <li key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                    : 'https://via.placeholder.com/200x100'\n                }\n                alt=\"\"\n              />\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </section>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios'; //\nconst API_KEY = 'fb16fb8d72c2b1b51619ebc618e9b844';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport async function getTrendingFilms() {\n  try {\n    const response = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n}\n\nexport async function getFilmById(id) {\n  try {\n    const response = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n}\n// https://api.themoviedb.org/3/&language=en-US\nexport async function getFilmCast(id) {\n  try {\n    const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n}\n\nexport async function getFilmReview(id) {\n  try {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n}\n\nexport async function getFilsByTitle(title) {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&query=${title}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n}\n"],"names":["props","useState","castList","setcastList","movieId","useLocation","state","useEffect","getFilmCast","cast","getFilmCastInfo","map","id","profile_path","name","character","src","alt","API_KEY","getTrendingFilms","axios","response","data","console","log","getFilmById","getFilmReview","getFilsByTitle","title"],"sourceRoot":""}