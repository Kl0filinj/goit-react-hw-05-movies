{"version":3,"file":"static/js/597.3f50bbd1.chunk.js","mappings":"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","sources":["components/Cast.jsx","../node_modules/@chakra-ui/image/dist/index.esm.js","components/MoviePoster.jsx","services/api.js"],"sourcesContent":["// import { FilmList } from 'pages/Home.styled';\nimport MoviePoster from './MoviePoster';\nimport { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getFilmCast } from 'services/api';\nimport { Wrap, WrapItem, Center, Text, Box, Heading } from '@chakra-ui/react';\n// import { ActorPreview, ActorWrapper } from './Cast.styled';\n\nconst Cast = props => {\n  const [castList, setcastList] = useState([]);\n  const location = useLocation();\n  const movieId = location.state.movieId;\n\n  useEffect(() => {\n    async function getFilmCastInfo() {\n      const cast = await getFilmCast(movieId);\n      setcastList(cast.cast);\n    }\n    getFilmCastInfo();\n  }, [movieId]);\n\n  return (\n    <Box as=\"section\" mt=\"7\">\n      <Box bgColor=\"gray.700\" p=\"8\" borderRadius=\"sm\">\n        <Heading as=\"h2\" fontSize=\"2xl\" mb=\"3\">\n          Cast\n        </Heading>\n        <Wrap spacing=\"4\" justify=\"center\" pt=\"1\">\n          {castList.map(({ id, profile_path, name, character }) => (\n            <WrapItem key={id} flexDirection=\"column\">\n              <MoviePoster\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                    : 'https://via.placeholder.com/200x300'\n                }\n                height=\"300px\"\n                width=\"200px\"\n              />\n              <Center\n                bgColor=\"black\"\n                w=\"100%\"\n                maxW=\"200px\"\n                display=\"flex\"\n                flexDirection=\"column\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                flexGrow=\"1\"\n                borderBottomRadius=\"base\"\n              >\n                <Text as=\"span\" textAlign=\"center\">\n                  {name}\n                </Text>\n                <hr width=\"70%\" />\n                <Text as=\"span\">{character}</Text>\n              </Center>\n            </WrapItem>\n          ))}\n        </Wrap>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Cast;\n","// ../../../react-shim.js\nimport React from \"react\";\n\n// src/image.tsx\nimport {\n  chakra,\n  forwardRef as forwardRef2\n} from \"@chakra-ui/system\";\n\n// ../../utilities/object-utils/src/index.ts\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone)\n      delete clone[key];\n  }\n  return clone;\n}\n\n// src/use-image.ts\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nfunction useImage(props) {\n  const {\n    loading,\n    src,\n    srcSet,\n    onLoad,\n    onError,\n    crossOrigin,\n    sizes,\n    ignoreFallback\n  } = props;\n  const [status, setStatus] = useState(\"pending\");\n  useEffect(() => {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  const imageRef = useRef();\n  const load = useCallback(() => {\n    if (!src)\n      return;\n    flush();\n    const img = new Image();\n    img.src = src;\n    if (crossOrigin)\n      img.crossOrigin = crossOrigin;\n    if (srcSet)\n      img.srcset = srcSet;\n    if (sizes)\n      img.sizes = sizes;\n    if (loading)\n      img.loading = loading;\n    img.onload = (event) => {\n      flush();\n      setStatus(\"loaded\");\n      onLoad == null ? void 0 : onLoad(event);\n    };\n    img.onerror = (error) => {\n      flush();\n      setStatus(\"failed\");\n      onError == null ? void 0 : onError(error);\n    };\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n  const flush = () => {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n  useSafeLayoutEffect(() => {\n    if (ignoreFallback)\n      return void 0;\n    if (status === \"loading\") {\n      load();\n    }\n    return () => {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  return ignoreFallback ? \"loaded\" : status;\n}\nvar shouldShowFallbackImage = (status, fallbackStrategy) => status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\" || status === \"failed\" && fallbackStrategy === \"onError\";\n\n// src/native-image.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nvar NativeImage = forwardRef(function NativeImage2(props, ref) {\n  const { htmlWidth, htmlHeight, alt, ...rest } = props;\n  return /* @__PURE__ */ React.createElement(\"img\", {\n    width: htmlWidth,\n    height: htmlHeight,\n    ref,\n    alt,\n    ...rest\n  });\n});\nNativeImage.displayName = \"NativeImage\";\n\n// src/image.tsx\nvar Image2 = forwardRef2(function Image3(props, ref) {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    srcSet,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    fallbackStrategy = \"beforeLoadOrError\",\n    referrerPolicy,\n    ...rest\n  } = props;\n  const providedFallback = fallbackSrc !== void 0 || fallback !== void 0;\n  const shouldIgnoreFallbackImage = loading != null || ignoreFallback || !providedFallback;\n  const status = useImage({\n    ...props,\n    ignoreFallback: shouldIgnoreFallbackImage\n  });\n  const showFallbackImage = shouldShowFallbackImage(status, fallbackStrategy);\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...shouldIgnoreFallbackImage ? rest : omit(rest, [\"onError\", \"onLoad\"])\n  };\n  if (showFallbackImage) {\n    if (fallback)\n      return fallback;\n    return /* @__PURE__ */ React.createElement(chakra.img, {\n      as: NativeImage,\n      className: \"chakra-image__placeholder\",\n      src: fallbackSrc,\n      ...shared\n    });\n  }\n  return /* @__PURE__ */ React.createElement(chakra.img, {\n    as: NativeImage,\n    src,\n    srcSet,\n    crossOrigin,\n    loading,\n    referrerPolicy,\n    className: \"chakra-image\",\n    ...shared\n  });\n});\nImage2.displayName = \"Image\";\n\n// src/img.tsx\nimport { chakra as chakra2, forwardRef as forwardRef3 } from \"@chakra-ui/system\";\nvar Img = forwardRef3((props, ref) => /* @__PURE__ */ React.createElement(chakra2.img, {\n  ref,\n  as: NativeImage,\n  className: \"chakra-image\",\n  ...props\n}));\nexport {\n  Image2 as Image,\n  Img,\n  shouldShowFallbackImage,\n  useImage\n};\n","import React from 'react';\n// import { FilmPoster } from 'pages/Home.styled';\nimport { Image } from '@chakra-ui/react';\nconst MoviePoster = ({ src, ...props }) => {\n  return <Image src={src} alt=\"\" borderTopRadius=\"base\" {...props} />;\n};\n\nexport default MoviePoster;\n","import axios from 'axios'; //\nconst API_KEY = 'fb16fb8d72c2b1b51619ebc618e9b844';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport async function getTrendingFilms() {\n  try {\n    const response = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n}\n\nexport async function getFilmById(id) {\n  try {\n    const response = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n}\n// https://api.themoviedb.org/3/&language=en-US\nexport async function getFilmCast(id) {\n  try {\n    const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n}\n\nexport async function getFilmReview(id) {\n  try {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n}\n\nexport async function getFilsByTitle(title) {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&query=${title}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n}\n"],"names":["props","useState","castList","setcastList","movieId","useLocation","state","useEffect","getFilmCast","cast","getFilmCastInfo","as","mt","bgColor","p","borderRadius","fontSize","mb","spacing","justify","pt","map","id","profile_path","name","character","flexDirection","src","height","width","w","maxW","display","justifyContent","alignItems","flexGrow","borderBottomRadius","textAlign","NativeImage","forwardRef","ref","htmlWidth","htmlHeight","alt","rest","React","displayName","Image2","forwardRef2","fallbackSrc","fallback","srcSet","align","fit","loading","ignoreFallback","crossOrigin","fallbackStrategy","referrerPolicy","shouldIgnoreFallbackImage","status","onLoad","onError","sizes","setStatus","imageRef","useRef","load","useCallback","flush","img","Image","srcset","onload","event","onerror","error","current","useSafeLayoutEffect","useImage","showFallbackImage","shouldShowFallbackImage","shared","objectFit","objectPosition","object","keysToOmit","clone","Object","assign","key","omit","chakra","className","forwardRef3","chakra2","borderTopRadius","API_KEY","getTrendingFilms","axios","response","data","console","log","getFilmById","getFilmReview","getFilsByTitle","title"],"sourceRoot":""}