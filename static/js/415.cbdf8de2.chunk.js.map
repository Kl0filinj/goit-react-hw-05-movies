{"version":3,"file":"static/js/415.cbdf8de2.chunk.js","mappings":"0JAgBA,IAdkB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACnB,OACE,gBACEC,MAAO,CACLC,SAAU,QACVC,QAAS,OACTC,gBAAiB,WAJrB,SAOGJ,GAGN,C,kGCXYK,EAAWC,EAAAA,GAAAA,GAAH,qHAORC,EAAaD,EAAAA,GAAAA,GAAH,6FAMVE,GAAWF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,yU,SCqBrB,EAjCqB,SAAC,GAAmC,IAAjCI,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,SAC3BC,EAAuB,SADyB,EAAXC,KACL,UAAY,GAClD,OACE,SAACR,EAAD,UACGK,EAAUI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAP,IAAoBC,MAAAA,OAApB,MAA4B,KAA5B,MAAkCC,KAAAA,OAAlC,MAAyC,KAAzC,SACb,SAACX,EAAD,WACE,UAACC,EAAD,CAAUW,GAAE,UAAKP,GAAL,OAAmBG,GAAMK,MAAO,CAAEC,KAAMV,GAApD,WACE,gBACEW,IACEN,EAAW,0CAC4BA,GACnC,sCAENO,IAAI,GACJC,OAAO,MACPC,MAAM,SAER,gBAAKxB,MAAO,CAAEC,SAAU,QAASC,QAAS,QAA1C,UACE,8BAAIc,QAAJ,IAAIA,EAAAA,EAASC,UAbFH,EADJ,KAqBpB,C,2HCFD,UArBa,SAAAW,GACX,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACMlB,GAAWmB,EAAAA,EAAAA,MASjB,OARAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACsBC,EAAAA,EAAAA,MADtB,OACQC,EADR,OAEEJ,EAAYI,EAAMC,SAFpB,4CADc,uBAAC,WAAD,wBAKdC,EACD,GAAE,KAGD,SAAC,IAAD,WACE,6BACE,wDACA,SAAC,IAAD,CAAczB,UAAWkB,EAAUjB,SAAUA,EAAUE,KAAM,aAIpE,C,8LCxBKuB,EAAU,mCAET,SAAeJ,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBK,EAAAA,GAAAA,IAAA,mCAAsCD,IAF1D,cAEGE,EAFH,yBAGIA,EAASC,MAHb,uCAKHC,QAAQC,IAAR,MALG,wGAUA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAA2B3B,GAA3B,gGAEoBsB,EAAAA,GAAAA,IAAA,gBAAmBtB,EAAnB,oBAAiCqB,IAFrD,cAEGE,EAFH,yBAGIA,EAASC,MAHb,uCAKHC,QAAQC,IAAR,MALG,wGAUA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA2B5B,GAA3B,gGAEoBsB,EAAAA,GAAAA,IAAA,gBAAmBtB,EAAnB,4BAAyCqB,IAF7D,cAEGE,EAFH,yBAGIA,EAASC,MAHb,uCAKHC,QAAQC,IAAR,MALG,wGAUA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA6B7B,GAA7B,gGAEoBsB,EAAAA,GAAAA,IAAA,gBAAmBtB,EAAnB,4BAAyCqB,IAF7D,cAEGE,EAFH,yBAGIA,EAASC,MAHb,uCAKHC,QAAQC,IAAR,MALG,wGAUA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA8B5B,GAA9B,gGAEoBoB,EAAAA,GAAAA,IAAA,+BACGD,EADH,kBACoBnB,IAHxC,cAEGqB,EAFH,yBAKIA,EAASC,MALb,uCAOHC,QAAQC,IAAR,MAPG,wGAzCPJ,EAAAA,GAAAA,SAAAA,QAAyB,+B","sources":["components/Container.jsx","pages/Home.styled.js","components/MainFilmList.jsx","pages/Home.jsx","services/api.js"],"sourcesContent":["import React from 'react';\n\nconst Container = ({ children }) => {\n  return (\n    <div\n      style={{\n        maxWidth: '100vw',\n        padding: '15px',\n        backgroundColor: '#2c2c2c',\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Container;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const FilmList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: base-line;\n`;\n\nexport const FilmWraper = styled.li`\n  display: flex;\n  flex-basis: calc(100% / 5);\n  padding: 15px 0;\n`;\n\nexport const FilmCard = styled(NavLink)`\n  display: flex;\n  flex-direction: column;\n  font-family: 'Roboto', sans-serif;\n  font-size: 20px;\n  font-weight: 600;\n  color: #212121;\n  height: 100%;\n  box-shadow: 0px 1px 3px rgb(0 0 0 / 12%), 0px 1px 1px rgb(0 0 0 / 14%),\n    0px 2px 1px rgb(0 0 0 / 20%);\n  border-radius: 0px 0px 4px 4px;\n`;\n","import React from 'react';\nimport { FilmList, FilmCard, FilmWraper } from 'pages/Home.styled';\nimport PropTypes from 'prop-types';\n\nconst MainFilmList = ({ movieList, location, page }) => {\n  const currentPage = page === 'home' ? 'movies/' : '';\n  return (\n    <FilmList>\n      {movieList.map(({ id, poster_path, title = null, name = null }) => (\n        <FilmWraper key={id}>\n          <FilmCard to={`${currentPage}${id}`} state={{ from: location }}>\n            <img\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                  : 'https://via.placeholder.com/200x300'\n              }\n              alt=\"\"\n              height=\"300\"\n              width=\"200\"\n            />\n            <div style={{ maxWidth: '180px', padding: '10px' }}>\n              <p>{title ?? name}</p>\n            </div>\n          </FilmCard>\n        </FilmWraper>\n      ))}\n    </FilmList>\n  );\n};\n\nMainFilmList.propTypes = {\n  movieList: PropTypes.array.isRequired,\n  location: PropTypes.object.isRequired,\n  page: PropTypes.string.isRequired,\n};\n\nexport default MainFilmList;\n","import Container from 'components/Container';\nimport MainFilmList from 'components/MainFilmList';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getTrendingFilms } from 'services/api';\n\nconst Home = props => {\n  const [filmList, setfilmList] = useState([]);\n  const location = useLocation();\n  useEffect(() => {\n    async function getTrendFilms() {\n      const films = await getTrendingFilms();\n      setfilmList(films.results);\n    }\n    getTrendFilms();\n  }, []);\n\n  return (\n    <Container>\n      <main>\n        <h1>Popular Films ⬇️</h1>\n        <MainFilmList movieList={filmList} location={location} page={'home'} />\n      </main>\n    </Container>\n  );\n};\n\nexport default Home;\n","import axios from 'axios'; //\nconst API_KEY = 'fb16fb8d72c2b1b51619ebc618e9b844';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport async function getTrendingFilms() {\n  try {\n    const response = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n}\n\nexport async function getFilmById(id) {\n  try {\n    const response = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n}\n// https://api.themoviedb.org/3/&language=en-US\nexport async function getFilmCast(id) {\n  try {\n    const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n}\n\nexport async function getFilmReview(id) {\n  try {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n}\n\nexport async function getFilsByTitle(title) {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&query=${title}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n}\n"],"names":["children","style","maxWidth","padding","backgroundColor","FilmList","styled","FilmWraper","FilmCard","NavLink","movieList","location","currentPage","page","map","id","poster_path","title","name","to","state","from","src","alt","height","width","props","useState","filmList","setfilmList","useLocation","useEffect","getTrendingFilms","films","results","getTrendFilms","API_KEY","axios","response","data","console","log","getFilmById","getFilmCast","getFilmReview","getFilsByTitle"],"sourceRoot":""}