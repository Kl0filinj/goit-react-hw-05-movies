{"version":3,"file":"static/js/29.ce82c231.chunk.js","mappings":"mRAEaA,EAAeC,EAAAA,GAAAA,IAAH,iDAIZC,EAAeD,EAAAA,GAAAA,GAAH,6F,SCsCzB,EAtCa,SAAAE,GACX,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAEMC,GADWC,EAAAA,EAAAA,MACQC,MAAMF,QAQ/B,OAPAG,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACqBC,EAAAA,EAAAA,IAAYJ,GADjC,OACQK,EADR,OAEEN,EAAYM,EAAKA,MAFnB,4CADc,uBAAC,WAAD,wBAKdC,EACD,GAAE,CAACN,KAEF,8BACE,4BACE,sCACA,SAAC,KAAD,UACGF,EAASS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAP,EAAqBC,KAArB,EAA2BC,UAA3B,OACZ,SAAChB,EAAD,WACE,SAACF,EAAD,CACEmB,IACEH,EAAY,0CAC2BA,GACnC,sCAENI,IAAI,GACJC,MAAM,MACNC,OAAO,SATQP,EADP,UAoBvB,C,sKCvCYQ,EAAWtB,EAAAA,GAAAA,GAAH,qHAORuB,EAAavB,EAAAA,GAAAA,GAAH,6FAMVwB,GAAWxB,EAAAA,EAAAA,IAAOyB,EAAAA,GAAPzB,CAAH,yQAYR0B,EAAa1B,EAAAA,GAAAA,IAAH,kG,8LC3BjB2B,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBC,EAAAA,GAAAA,IAAA,mCAAsCF,IAF1D,cAEGG,EAFH,yBAGIA,EAASC,MAHb,uCAKHC,QAAQC,IAAR,MALG,wGAUA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAA2BpB,GAA3B,gGAEoBe,EAAAA,GAAAA,IAAA,gBAAmBf,EAAnB,oBAAiCa,IAFrD,cAEGG,EAFH,yBAGIA,EAASC,MAHb,uCAKHC,QAAQC,IAAR,MALG,wGAUA,SAAevB,EAAtB,+CAAO,OAAP,oBAAO,WAA2BI,GAA3B,gGAEoBe,EAAAA,GAAAA,IAAA,gBAAmBf,EAAnB,4BAAyCa,IAF7D,cAEGG,EAFH,yBAGIA,EAASC,MAHb,uCAKHC,QAAQC,IAAR,MALG,wGAUA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA6BrB,GAA7B,gGAEoBe,EAAAA,GAAAA,IAAA,gBAAmBf,EAAnB,4BAAyCa,IAF7D,cAEGG,EAFH,yBAGIA,EAASC,MAHb,uCAKHC,QAAQC,IAAR,MALG,wGAUA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,gGAEoBR,EAAAA,GAAAA,IAAA,+BACGF,EADH,kBACoBU,IAHxC,cAEGP,EAFH,yBAKIA,EAASC,MALb,uCAOHC,QAAQC,IAAR,MAPG,wGAzCPJ,EAAAA,GAAAA,SAAAA,QAAyB,+B","sources":["components/Cast.styled.jsx","components/Cast.jsx","pages/Home.styled.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ActorPreview = styled.img`\n  border-radius: 100px;\n`;\n\nexport const ActorWrapper = styled.li`\n  display: flex;\n  flex-basis: calc(100% / 8);\n  padding: 15px 0;\n`;\n","import { FilmList } from 'pages/Home.styled';\nimport { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getFilmCast } from 'services/api';\nimport { ActorPreview, ActorWrapper } from './Cast.styled';\n\nconst Cast = props => {\n  const [castList, setcastList] = useState([]);\n  const location = useLocation();\n  const movieId = location.state.movieId;\n  useEffect(() => {\n    async function getFilmCastInfo() {\n      const cast = await getFilmCast(movieId);\n      setcastList(cast.cast);\n    }\n    getFilmCastInfo();\n  }, [movieId]);\n  return (\n    <section>\n      <div>\n        <h2>Cast of </h2>\n        <FilmList>\n          {castList.map(({ id, profile_path, name, character }) => (\n            <ActorWrapper key={id}>\n              <ActorPreview\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                    : 'https://via.placeholder.com/200x100'\n                }\n                alt=\"\"\n                width=\"140\"\n                height=\"140\"\n              />\n              {/* <p>{name}</p>\n              <p>Character: {character}</p> */}\n            </ActorWrapper>\n          ))}\n        </FilmList>\n      </div>\n    </section>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const FilmList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: base-line;\n`;\n\nexport const FilmWraper = styled.li`\n  display: flex;\n  flex-basis: calc(100% / 6);\n  padding: 15px 0;\n`;\n\nexport const FilmCard = styled(NavLink)`\n  display: flex;\n  flex-direction: column;\n  font-family: 'Roboto', sans-serif;\n  font-size: 20px;\n  font-weight: 600;\n  color: #212121;\n  height: 100%;\n  filter: drop-shadow(0 2px 2px rgba(0, 0, 0, 0.3));\n  border-radius: 0.25rem;\n`;\n\nexport const FilmPoster = styled.img`\n  border-radius: 0.25rem;\n  &:hover {\n    outline: 1px solid #fff;\n  }\n`;\n","import axios from 'axios'; //\nconst API_KEY = 'fb16fb8d72c2b1b51619ebc618e9b844';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport async function getTrendingFilms() {\n  try {\n    const response = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n}\n\nexport async function getFilmById(id) {\n  try {\n    const response = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n}\n// https://api.themoviedb.org/3/&language=en-US\nexport async function getFilmCast(id) {\n  try {\n    const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n}\n\nexport async function getFilmReview(id) {\n  try {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n}\n\nexport async function getFilsByTitle(title) {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&query=${title}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n}\n"],"names":["ActorPreview","styled","ActorWrapper","props","useState","castList","setcastList","movieId","useLocation","state","useEffect","getFilmCast","cast","getFilmCastInfo","map","id","profile_path","name","character","src","alt","width","height","FilmList","FilmWraper","FilmCard","NavLink","FilmPoster","API_KEY","getTrendingFilms","axios","response","data","console","log","getFilmById","getFilmReview","getFilsByTitle","title"],"sourceRoot":""}