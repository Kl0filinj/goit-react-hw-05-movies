{"version":3,"file":"static/js/134.177cec47.chunk.js","mappings":"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","sources":["components/Container.jsx","components/MainFilmList.jsx","components/MoviePoster.jsx","pages/Home.styled.js","pages/Movies.jsx","services/api.js"],"sourcesContent":["import React from 'react';\n\nconst Container = ({ children }) => {\n  return (\n    <div\n      style={{\n        position: 'relative',\n        flexShrink: 0,\n        overflow: 'hidden',\n        padding: '3rem',\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Container;\n","import React from 'react';\nimport { FilmList, FilmCard, FilmWraper } from 'pages/Home.styled';\nimport PropTypes from 'prop-types';\nimport MoviePoster from './MoviePoster';\n\nconst MainFilmList = ({ movieList, location, page }) => {\n  const currentPage = page === 'home' ? 'movies/' : '';\n  return (\n    <FilmList>\n      {movieList.map(({ id, poster_path }) => (\n        <FilmWraper key={id}>\n          <FilmCard to={`${currentPage}${id}`} state={{ from: location }}>\n            <MoviePoster\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                  : 'https://via.placeholder.com/200x300'\n              }\n              height=\"300\"\n              width=\"200\"\n            />\n          </FilmCard>\n        </FilmWraper>\n      ))}\n    </FilmList>\n  );\n};\n\nMainFilmList.propTypes = {\n  movieList: PropTypes.array.isRequired,\n  location: PropTypes.object.isRequired,\n  page: PropTypes.string.isRequired,\n};\n\nexport default MainFilmList;\n","import React from 'react';\nimport { FilmPoster } from 'pages/Home.styled';\n\nconst MoviePoster = ({ src, width, height }) => {\n  return <FilmPoster src={src} alt=\"\" width={width} height={height} />;\n};\n\nexport default MoviePoster;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const FilmList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: base-line;\n`;\n\nexport const FilmWraper = styled.li`\n  display: flex;\n  flex-basis: calc(100% / 6);\n  padding: 15px 0;\n`;\n\nexport const FilmCard = styled(NavLink)`\n  display: flex;\n  flex-direction: column;\n  font-family: 'Roboto', sans-serif;\n  font-size: 20px;\n  font-weight: 600;\n  color: #212121;\n  height: 100%;\n  filter: drop-shadow(0 2px 2px rgba(0, 0, 0, 0.3));\n  border-radius: 0.25rem;\n`;\n\nexport const FilmPoster = styled.img`\n  border-radius: 0.25rem;\n  &:hover {\n    outline: 1px solid #fff;\n  }\n`;\n","import Container from 'components/Container';\nimport MainFilmList from 'components/MainFilmList';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { getFilsByTitle } from 'services/api';\n\nconst Movies = props => {\n  const location = useLocation();\n\n  const [serchParams, setserchParams] = useSearchParams();\n\n  const [searchedFilms, setsearchedFilms] = useState([]);\n\n  const [filmQuery, setfilmQuery] = useState('');\n\n  const filmTitle = serchParams.get('title') ?? '';\n\n  const onFilterChanged = evt => {\n    evt.preventDefault();\n    if (filmQuery === filmTitle) {\n      return alert('Enter new movie Title ^_^');\n    }\n    setserchParams(filmQuery !== '' ? { title: filmQuery } : {});\n  };\n  useEffect(() => {\n    if (filmTitle === '') {\n      return;\n    }\n    async function getMoviesByTitle() {\n      const films = await getFilsByTitle(filmTitle);\n      setsearchedFilms(films.results);\n    }\n    getMoviesByTitle();\n    setfilmQuery(filmTitle);\n  }, [filmTitle]);\n  return (\n    <Container>\n      <main>\n        <h1>Search Movies ⬇️</h1>\n        <form autoComplete=\"false\" onSubmit={onFilterChanged}>\n          <input\n            type=\"text\"\n            value={filmQuery}\n            onChange={evt => setfilmQuery(evt.target.value)}\n          />\n          <button type=\"submit\">Search ✅</button>\n        </form>\n        {searchedFilms.length === 0 ? (\n          <h2>Find Something ⬆️</h2>\n        ) : (\n          <MainFilmList\n            movieList={searchedFilms}\n            location={location}\n            page={'movies'}\n          />\n        )}\n      </main>\n    </Container>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios'; //\nconst API_KEY = 'fb16fb8d72c2b1b51619ebc618e9b844';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport async function getTrendingFilms() {\n  try {\n    const response = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n}\n\nexport async function getFilmById(id) {\n  try {\n    const response = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n}\n// https://api.themoviedb.org/3/&language=en-US\nexport async function getFilmCast(id) {\n  try {\n    const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n}\n\nexport async function getFilmReview(id) {\n  try {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n}\n\nexport async function getFilsByTitle(title) {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&query=${title}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n}\n"],"names":["children","style","position","flexShrink","overflow","padding","movieList","location","currentPage","page","map","id","poster_path","to","state","from","src","height","width","alt","FilmList","styled","FilmWraper","FilmCard","NavLink","FilmPoster","props","useLocation","useSearchParams","serchParams","setserchParams","useState","searchedFilms","setsearchedFilms","filmQuery","setfilmQuery","filmTitle","get","useEffect","getFilsByTitle","films","results","getMoviesByTitle","autoComplete","onSubmit","evt","preventDefault","alert","title","type","value","onChange","target","length","API_KEY","getTrendingFilms","axios","response","data","console","log","getFilmById","getFilmCast","getFilmReview"],"sourceRoot":""}